package com.phase1.api;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;

import com.phase1.models.Admin;
import com.phase1.models.Buyers;
import com.phase1.models.StoreOwners;
//import com.phase1.models.User;
import com.phase1.services.IUserServices;
import java.util.List;

@RestController
public class UserAPIController {

	@Autowired //This means to get the bean called userRepository Which is auto-generated by Spring, we will use it to handle the data
    private IUserServices service;

	@RequestMapping(value="/addadmin", method=RequestMethod.POST)
	    public boolean addadmin(@RequestBody Admin user)
	    {
	        // @RequestParam means it is a parameter from the GET or POST request

	        return service.addAdmin(user);
	    }

	@RequestMapping(value="/addbuyer", method=RequestMethod.POST)
    public boolean addbuyer(@RequestBody Buyers user)
    {
        // @RequestParam means it is a parameter from the GET or POST request

        return service.addUser(user);
    }
	@RequestMapping(value="/addstoreowner", method=RequestMethod.POST)
    public boolean addstoreowner(@RequestBody StoreOwners user)
    {
        // @RequestParam means it is a parameter from the GET or POST request
        return service.addStoreOwner(user);
    }
	@RequestMapping(value="/loginAdmin",method=RequestMethod.POST)
	public boolean IsAdmin(@RequestParam String name,@RequestParam String pass) {

		return service.IsAdmin(name,pass);

	}
	@RequestMapping(value="/loginBuyer",method=RequestMethod.POST)
	public boolean IsBuyer(@RequestParam String name,@RequestParam String pass) {

		return service.IsBuyer(name,pass);

	}
	@RequestMapping(value="/loginOwner",method=RequestMethod.POST)
	public boolean IsStoreOwner(@RequestParam String name,@RequestParam String pass) {

		return service.IsStoreOwner(name,pass);

	}

	@RequestMapping("/getAll")
	    public List<Buyers> getAllUsers(@RequestParam String name,@RequestParam String pass)
	 {
	        // This returns a JSON or XML with the users
	        return service.getAllUsers(name,pass);
	 }

}
